{"version":3,"sources":["constants/brickDimensions.js","constants/defaults.js","actions/index.js","store/store.js","reducer/index.js","components/Common/Select/index.js","components/Interface/BrickDimensions/BrickSelectorAndForm/styles/index.js","components/Interface/BrickDimensions/BrickSelectorAndForm/index.js","components/Interface/BrickDimensions/index.js","components/Interface/CanvasDimensions/CanvasForm/styles/index.js","components/Interface/CanvasDimensions/CanvasForm/index.js","components/Interface/CanvasDimensions/index.js","components/Interface/ColorPickersContainer/ColorModeSelector/index.js","components/Interface/ColorPickersContainer/ColorHueModeSelector/index.js","components/Interface/ColorPickersContainer/ColorPickersOptions/ColorPicker/index.js","components/Interface/ColorPickersContainer/ColorPickersOptions/ColorSlide/index.js","components/Interface/ColorPickersContainer/ColorPickersOptions/CustomColorPicker/index.js","components/Interface/ColorPickersContainer/ColorPickersOptions/index.js","components/Interface/ColorPickersContainer/index.js","components/Interface/index.js","helpers/canvasSizeCorrector.js","components/CanvasContainer/Canvas/index.js","helpers/brickLayer.js","components/CanvasContainer/index.js","App.js","serviceWorker.js","index.js"],"names":["brickDimensions","Standard","height","width","mortar","Secondary","colorModes","rgb","lab","lrgb","hsl","lch","colorHueModes","two-point scale","totally-random RGB","controlled-random HSL","choose color from multiple","initialState","brickHeight","brickWidth","brickMortar","canvasHeight","canvasWidth","lineThickness","brickDimensionsPopup","canvasDimensionsPopup","firstColor","secondColor","mortarColor","colorArray","saturation","lightness","colorHueMode","colorMode","trimHeight","trimWidth","TOGGLE_BRICK_POPUP","TOGGLE_CANVAS_POPUP","SET_BRICK_DIMENSIONS","SET_CANVAS_DIMENSIONS","TOGGLE_TRIM","SET_COLOR","SET_HSL","SAVE_IMAGE","SET_COLOR_MODE","SET_COLOR_HUE_MODE","ADD_TO_COLOR_ARRAY","REMOVE_FROM_COLOR_ARRAY","EDIT_COLOR_IN_ARRAY","toggleBrickDimensionsPopup","type","setBrickDimensions","dimensions","payload","setCanvasDimensions","createStore","state","arguments","length","undefined","action","Object","objectSpread","defineProperty","name","color","value","concat","toConsumableArray","message","slice","index","window","__REDUX_DEVTOOLS_EXTENSION__","styles","select","margin","Select","props","handleChange","options","disabled","_props$custom","custom","react_default","a","createElement","style","onChange","keys","map","key","StyledForm","styled","form","_templateObject","_default","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleSelectChange","event","_this$props","dispatch","target","_event$target","setState","prevState","formControls","submitForm","preventDefault","parseInt","_this$props2","_this$props3","onSubmit","min","step","Component","connect","_ref","BrickSelectorAndForm_default","styles_templateObject","handleToggleTrim","toggleTrim","styles_StyledForm","checked","CanvasForm_default","React","container","marginBottom","marginRight","handleOnChangeComplete","colorName","setColor","hex","header","lib","onChangeComplete","Handle","Slider","handle","dragging","restProps","objectWithoutProperties","rc_tooltip_es","prefixCls","overlay","visible","placement","assign","valueName","_ref2","setHSL","rc_slider_es","onAfterChange","defaultValue","max","handleClick","_this$state","displayColorPicker","backgroundColor","_ref4","editColorInArray","handleClose","borderRadius","background","swatch","padding","boxShadow","display","cursor","popover","position","zIndex","cover","top","right","bottom","left","onClick","ColorPickersContainer","removeHandler","_ref3","removeFromColorArray","handleAdd","random","_this2","ColorPicker_Component","ColorSlide_default","maxWidth","gridTemplateColumns","gridColumnGap","gridRowGap","CustomColorPicker_default","ColorHueModeSelector_Component","ColorModeSelector_Component","ColorPickersOptions","Interface","Interface_BrickDimensions","Interface_CanvasDimensions","Interface_ColorPickersContainer","canvasDim","save","brickDim","trimCanvasWidth","id","_","Math","preserveAspectRatio","scale","coordinates","xStart","yIncrement","round","xIncrement","yStartMaximum","xStartMaximum","chroma","mode","hue","floor","i","y","x","fill","push","brickLayer","className","svg","document","getElementById","serializer","XMLSerializer","xmlserializer","svgBlob","Blob","serializeToString","url","URL","createObjectURL","link","href","download","innerHTML","onclick","appendChild","Canvas_default","App","CanvasContainer","Boolean","location","hostname","match","ReactDOM","render","es","store","src_App","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.3d7b94c2.chunk.js","sourcesContent":["export default {\n  // actual dimensions in millimeters\n  Standard: {\n    height: 65,\n    width: 215,\n    mortar: 10\n  },\n  Secondary: {\n    height: 61,\n    width: 210,\n    mortar: 9\n  }\n};\n","import brickDimensions from './brickDimensions';\n\nexport const colorModes = {\n  rgb: '',\n  lab: '',\n  lrgb: '',\n  hsl: '',\n  lch: ''\n};\n\nexport const colorHueModes = {\n  'two-point scale': '',\n  'totally-random RGB': '',\n  'controlled-random HSL': '',\n  'choose color from multiple': ''\n};\n\nexport const initialState = {\n  brickHeight: brickDimensions.Standard.height,\n  brickWidth: brickDimensions.Standard.width,\n  brickMortar: brickDimensions.Standard.mortar,\n  canvasHeight: 800,\n  canvasWidth: 1000,\n  lineThickness: 1,\n  brickDimensionsPopup: false,\n  canvasDimensionsPopup: false,\n  firstColor: '#000000',\n  secondColor: '#FFFFFF',\n  mortarColor: '#FFFFFF',\n  colorArray: [],\n  saturation: 0.8,\n  lightness: 0.75,\n  colorHueMode: 'two-point scale',\n  colorMode: 'rgb',\n  trimHeight: true,\n  trimWidth: true\n};\n","export const TOGGLE_BRICK_POPUP = 'TOGGLE_BRICK_POPUP';\nexport const TOGGLE_CANVAS_POPUP = 'TOGGLE_CANVAS_POPUP';\nexport const SET_BRICK_DIMENSIONS = 'SET_BRICK_DIMENSIONS';\nexport const SET_CANVAS_DIMENSIONS = 'SET_CANVAS_DIMENSIONS';\nexport const TOGGLE_TRIM = 'TOGGLE_TRIM';\nexport const SET_COLOR = 'SET_COLOR';\nexport const SET_HSL = 'SET_HSL';\nexport const SAVE_IMAGE = 'SAVE_IMAGE';\nexport const SET_COLOR_MODE = 'SET_COLOR_MODE';\nexport const SET_COLOR_HUE_MODE = 'SET_COLOR_HUE_MODE';\nexport const ADD_TO_COLOR_ARRAY = 'ADD_TO_COLOR_ARRAY';\nexport const REMOVE_FROM_COLOR_ARRAY = 'REMOVE_FROM_COLOR_ARRAY';\nexport const EDIT_COLOR_IN_ARRAY = 'EDIT_COLOR_IN_ARRAY';\n\nexport function toggleBrickDimensionsPopup() {\n  return {\n    type: TOGGLE_BRICK_POPUP\n  };\n}\n\nexport function toggleCanvasDimensionsPopup() {\n  return {\n    type: TOGGLE_CANVAS_POPUP\n  };\n}\n\nexport function setBrickDimensions(dimensions) {\n  return {\n    type: SET_BRICK_DIMENSIONS,\n    payload: dimensions\n  };\n}\n\nexport function setCanvasDimensions(dimensions) {\n  return {\n    type: SET_CANVAS_DIMENSIONS,\n    payload: dimensions\n  };\n}\n\nexport function toggleTrim(name) {\n  return {\n    type: TOGGLE_TRIM,\n    payload: name\n  };\n}\n\nexport function setColor({ name, color }) {\n  return {\n    type: SET_COLOR,\n    payload: { name, color }\n  };\n}\n\nexport function setHSL({ name, value }) {\n  return {\n    type: SET_HSL,\n    payload: { name, value }\n  };\n}\n\nexport function setColorMode(mode) {\n  return {\n    type: SET_COLOR_MODE,\n    payload: mode\n  };\n}\n\nexport function setColorHueMode(mode) {\n  return {\n    type: SET_COLOR_HUE_MODE,\n    payload: mode\n  };\n}\n\nexport function saveImage() {\n  return { type: SAVE_IMAGE };\n}\n\nexport function addToColorArray(color) {\n  return {\n    type: ADD_TO_COLOR_ARRAY,\n    payload: color\n  };\n}\n\nexport function removeFromColorArray({ index }) {\n  return {\n    type: REMOVE_FROM_COLOR_ARRAY,\n    payload: { index }\n  };\n}\n\nexport function editColorInArray({ index, color }) {\n  return {\n    type: EDIT_COLOR_IN_ARRAY,\n    payload: { index, color }\n  };\n}\n","import { createStore } from 'redux';\nimport reducer from '../reducer';\n\nexport default createStore(\n  reducer /* preloadedState, */,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n","import { initialState } from '../constants/defaults';\nimport {\n  TOGGLE_BRICK_POPUP,\n  TOGGLE_CANVAS_POPUP,\n  SET_BRICK_DIMENSIONS,\n  SET_CANVAS_DIMENSIONS,\n  TOGGLE_TRIM,\n  SET_COLOR,\n  SET_COLOR_MODE,\n  SAVE_IMAGE,\n  SET_COLOR_HUE_MODE,\n  SET_HSL,\n  ADD_TO_COLOR_ARRAY,\n  REMOVE_FROM_COLOR_ARRAY,\n  EDIT_COLOR_IN_ARRAY\n} from '../actions';\n\nexport default function reducer(state = initialState, action) {\n  switch (action.type) {\n    case TOGGLE_BRICK_POPUP:\n      return { ...state, brickDimensionsPopup: !state.brickDimensionsPopup };\n    case TOGGLE_CANVAS_POPUP:\n      return { ...state, canvasDimensionsPopup: !state.canvasDimensionsPopup };\n    case SET_BRICK_DIMENSIONS:\n      return {\n        ...state,\n        brickHeight: action.payload.height || state.brickHeight,\n        brickWidth: action.payload.width || state.brickWidth,\n        brickMortar: action.payload.mortar\n      };\n    case SET_CANVAS_DIMENSIONS:\n      return {\n        ...state,\n        canvasHeight: action.payload.height || state.canvasHeight,\n        canvasWidth: action.payload.width || state.canvasWidth\n      };\n    case TOGGLE_TRIM:\n      return { ...state, [action.payload]: !state[action.payload] };\n    case SET_COLOR:\n      return { ...state, [action.payload.name]: action.payload.color };\n    case SET_HSL:\n      return { ...state, [action.payload.name]: action.payload.value };\n    case SET_COLOR_MODE:\n      return { ...state, colorMode: action.payload };\n    case SET_COLOR_HUE_MODE:\n      return { ...state, colorHueMode: action.payload };\n    case SAVE_IMAGE:\n      return state;\n    case ADD_TO_COLOR_ARRAY:\n      return { ...state, colorArray: [...state.colorArray, action.payload] };\n    case REMOVE_FROM_COLOR_ARRAY:\n      return {\n        ...state,\n        message: action.payload,\n        colorArray: [\n          ...state.colorArray.slice(0, action.payload.index),\n          ...state.colorArray.slice(action.payload.index + 1)\n        ]\n      };\n    case EDIT_COLOR_IN_ARRAY:\n      return {\n        ...state,\n        colorArray: [\n          ...state.colorArray.slice(0, action.payload.index),\n          action.payload.color,\n          ...state.colorArray.slice(action.payload.index + 1)\n        ]\n      };\n    default:\n      return state;\n  }\n}\n","import React from 'react';\n\nconst styles = {\n  select: {\n    margin: 10\n  }\n};\n\nexport default props => {\n  const { handleChange, value, options, disabled, custom = false } = props;\n  return (\n    <select\n      style={styles.select}\n      disabled={disabled}\n      value={value}\n      onChange={handleChange}\n    >\n      {Object.keys(options).map(name => (\n        <option key={name} value={name}>\n          {name}\n        </option>\n      ))}\n      {custom && (\n        <option key=\"custom\" value=\"Custom...\">\n          Custom...\n        </option>\n      )}\n    </select>\n  );\n};\n","import styled from 'styled-components';\n\n// eslint-disable-next-line import/prefer-default-export\nexport const StyledForm = styled.form`\n    display: flex;\n    flex-direction: column;\n    width: 200px;\n    justify-content: space-between;\n\n    div {\n        display: flex;\n        margin-bottom: 20px;\n        align-items: center;\n        input {\n            width: 50px;\n            margin-right: 20px;\n        }\n        span {\n            width: 120px;\n        }\n    }\n`;","import React, { Component } from 'react';\nimport Select from '../../../Common/Select';\nimport brickDimensions from '../../../../constants/brickDimensions';\nimport {\n  toggleBrickDimensionsPopup,\n  setBrickDimensions\n} from '../../../../actions/index';\nimport { StyledForm } from './styles';\n\nexport default class extends Component {\n  constructor(props) {\n    super(props);\n    const { brickHeight, brickWidth, brickMortar } = this.props;\n    this.state = {\n      formControls: {\n        brickHeight: { value: brickHeight },\n        brickWidth: { value: brickWidth },\n        brickMortar: { value: brickMortar }\n      }\n    };\n  }\n\n  handleSelectChange = event => {\n    const { brickDimensionsPopup, dispatch } = this.props;\n    const { value } = event.target;\n    if (value === 'Custom...') {\n      dispatch(toggleBrickDimensionsPopup());\n    } else {\n      if (brickDimensionsPopup === true) dispatch(toggleBrickDimensionsPopup());\n      dispatch(setBrickDimensions(brickDimensions[value]));\n    }\n  };\n\n  handleChange = event => {\n    const { name, value } = event.target;\n    this.setState(prevState => {\n      return {\n        formControls: {\n          ...prevState.formControls,\n          [name]: {\n            ...prevState.formControls[name],\n            value\n          }\n        }\n      };\n    });\n  };\n\n  submitForm = event => {\n    event.preventDefault();\n    const { dispatch } = this.props;\n    const { formControls } = this.state;\n    const height = parseInt(formControls.brickHeight.value, 10);\n    const width = parseInt(formControls.brickWidth.value, 10);\n    const mortar = parseInt(formControls.brickMortar.value, 10);\n    dispatch(setBrickDimensions({ height, width, mortar }));\n  };\n\n  render() {\n    const { value, brickDimensionsPopup } = this.props;\n    const { formControls } = this.state;\n    return (\n      <div>\n        <h2>Brick Dimensions</h2>\n        <Select\n          handleChange={this.handleSelectChange}\n          value={value}\n          options={brickDimensions}\n          custom\n        />\n        {brickDimensionsPopup && (\n          <StyledForm onSubmit={this.submitForm}>\n            <div>\n            <span>Brick Height</span>\n            <input\n              type=\"number\"\n              min=\"0\"\n              step=\"1\"\n              name=\"brickHeight\"\n              value={formControls.brickHeight.value}\n              onChange={this.handleChange}\n            />\n            </div>\n            <div>\n            <span>Brick Width</span>\n            <input\n              type=\"number\"\n              min=\"0\"\n              step=\"1\"\n              name=\"brickWidth\"\n              value={formControls.brickWidth.value}\n              onChange={this.handleChange}\n            />\n            </div>\n            <div>\n            <span>Brick Mortar</span>\n            <input\n              type=\"number\"\n              min=\"0\"\n              step=\"1\"\n              name=\"brickMortar\"\n              value={formControls.brickMortar.value}\n              onChange={this.handleChange}\n            />\n            </div>\n            <input type=\"submit\" value=\"Submit\" />\n          </StyledForm>\n        )}\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport BrickSelectorAndForm from './BrickSelectorAndForm';\n\nconst BrickDimensions = props => <BrickSelectorAndForm {...props} />;\n\nconst mapStateToProps = ({\n  brickHeight,\n  brickWidth,\n  brickMortar,\n  brickDimensionsPopup\n}) => ({\n  brickHeight,\n  brickWidth,\n  brickMortar,\n  brickDimensionsPopup\n});\n\nexport default connect(mapStateToProps)(BrickDimensions);\n","import styled from 'styled-components';\n\n// eslint-disable-next-line import/prefer-default-export\nexport const StyledForm = styled.form`\n    display: flex;\n    flex-direction: column;\n    width: 380px;\n    justify-content: space-between;\n\n    div {\n        display: flex;\n        margin-bottom: 20px;\n        align-items: center;\n        input {\n            width: 50px;\n            margin-right: 20px;\n        }\n        span {\n            width: 120px;\n        }\n    }\n`;","import React, { Component } from 'react';\nimport { setCanvasDimensions, toggleTrim } from '../../../../actions/index';\nimport { StyledForm } from './styles';\n\nexport default class extends Component {\n  constructor(props) {\n    super(props);\n    const { canvasHeight, canvasWidth } = this.props;\n    this.state = {\n      formControls: {\n        canvasHeight: { value: canvasHeight },\n        canvasWidth: { value: canvasWidth }\n      }\n    };\n  }\n\n  handleSelectChange = event => {\n    const { dispatch } = this.props;\n    const { value } = event.target;\n    dispatch(setCanvasDimensions(value));\n  };\n\n  handleChange = event => {\n    const { name, value } = event.target;\n    this.setState(prevState => {\n      return {\n        formControls: {\n          ...prevState.formControls,\n          [name]: {\n            ...prevState.formControls[name],\n            value\n          }\n        }\n      };\n    });\n  };\n\n  handleToggleTrim = event => {\n    const { dispatch } = this.props;\n    const { name } = event.target;\n    dispatch(toggleTrim(name));\n  };\n\n  submitForm = event => {\n    event.preventDefault();\n    const { dispatch } = this.props;\n    const { formControls } = this.state;\n    const height = parseInt(formControls.canvasHeight.value, 10);\n    const width = parseInt(formControls.canvasWidth.value, 10);\n    dispatch(setCanvasDimensions({ height, width }));\n  };\n\n  render() {\n    const { trimHeight, trimWidth } = this.props;\n    const { formControls } = this.state;\n    return (\n      <div>\n        <h2>Canvas Dimensions</h2>\n        <StyledForm onSubmit={this.submitForm}>\n          <div>\n            <span>Canvas Height</span>\n            <input\n              type=\"number\"\n              min=\"0\"\n              step=\"1\"\n              name=\"canvasHeight\"\n              value={formControls.canvasHeight.value}\n              onChange={this.handleChange}\n            />\n            <span>Trim Height</span>\n            <input\n              type=\"checkbox\"\n              name=\"trimHeight\"\n              checked={trimHeight}\n              onChange={this.handleToggleTrim}\n            />\n          </div>\n          <div>\n            <span>Canvas Width</span>\n            <input\n              type=\"number\"\n              min=\"0\"\n              step=\"1\"  \n              name=\"canvasWidth\"\n              value={formControls.canvasWidth.value}\n              onChange={this.handleChange}\n            />\n            <span>Trim Width</span>\n            <input\n              type=\"checkbox\"\n              name=\"trimWidth\"\n              checked={trimWidth}\n              onChange={this.handleToggleTrim}\n            />\n          </div>\n          <input type=\"submit\" value=\"Submit\" />\n        </StyledForm>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport CanvasForm from './CanvasForm';\n\nconst CanvasDimensions = props => <CanvasForm {...props} />;\n\nconst mapStateToProps = ({\n  canvasHeight,\n  canvasWidth,\n  trimHeight,\n  trimWidth\n}) => ({\n  canvasHeight,\n  canvasWidth,\n  trimHeight,\n  trimWidth\n});\n\nexport default connect(mapStateToProps)(CanvasDimensions);\n","import React from 'react';\nimport { colorModes } from '../../../../constants/defaults';\nimport { setColorMode } from '../../../../actions';\nimport Select from '../../../Common/Select';\n\nexport default class Component extends React.Component {\n  handleSelectChange = event => {\n    const { dispatch } = this.props;\n    const { value } = event.target;\n    dispatch(setColorMode(value));\n  };\n\n  render() {\n    const { colorMode, colorHueMode } = this.props;\n    return (\n      <div>\n        Color Scale Method\n        <Select\n          disabled={colorHueMode !== 'two-point scale'}\n          handleChange={this.handleSelectChange}\n          value={colorMode}\n          options={colorModes}\n        />\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport { colorHueModes } from '../../../../constants/defaults';\nimport { setColorHueMode } from '../../../../actions';\nimport Select from '../../../Common/Select';\n\nconst styles = {\n  container: {\n    marginBottom: 20\n  }\n}\n\nexport default class Component extends React.Component {\n  handleSelectChange = event => {\n    const { dispatch } = this.props;\n    const { value } = event.target;\n    dispatch(setColorHueMode(value));\n  };\n\n  render() {\n    const { colorHueMode } = this.props;\n    return (\n      <div style={styles.container}>\n          Color Mode\n        <Select\n          handleChange={this.handleSelectChange}\n          value={colorHueMode}\n          options={colorHueModes}\n        />\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport { PhotoshopPicker } from 'react-color';\nimport { setColor } from '../../../../../actions';\n\nconst styles = {\n  container: { marginRight: 20 }\n};\n\nexport default class Component extends React.Component {\n  handleOnChangeComplete = color => {\n    const { colorName, dispatch } = this.props;\n    dispatch(setColor({ name: colorName, color: color.hex }));\n  };\n\n  render() {\n    // eslint-disable-next-line react/destructuring-assignment\n    const color = this.props[this.props.colorName];\n    const { header } = this.props;\n    return (\n      <div style={styles.container}>\n        <PhotoshopPicker\n          header={header}\n          color={color}\n          onChangeComplete={this.handleOnChangeComplete}\n        />\n      </div>\n    );\n  }\n}\n","import 'rc-slider/assets/index.css';\nimport 'rc-tooltip/assets/bootstrap.css';\n\nimport React from 'react';\nimport Slider from 'rc-slider';\nimport Tooltip from 'rc-tooltip';\nimport { setHSL } from '../../../../../actions';\n\nconst { Handle } = Slider;\n\nconst handle = props => {\n  const { value, dragging, index, ...restProps } = props;\n  return (\n    <Tooltip\n      prefixCls=\"rc-slider-tooltip\"\n      overlay={value}\n      visible={dragging}\n      placement=\"top\"\n      key={index}\n    >\n      <Handle value={value} {...restProps} />\n    </Tooltip>\n  );\n};\n\nexport default class extends React.Component {\n  handleOnChangeComplete = value => {\n    const { valueName, dispatch } = this.props;\n    dispatch(setHSL({ name: valueName, value: value / 100 }));\n  };\n\n  render() {\n    // const color = this.props[this.props.colorName];\n    const wrapperStyle = { width: 400, margin: 50 };\n    const { valueName, value } = this.props;\n    return (\n      <div>\n        <h3>{valueName}</h3>\n        <div style={wrapperStyle}>\n          <Slider\n            handle={handle}\n            onAfterChange={this.handleOnChangeComplete}\n            defaultValue={value * 100}\n            min={0}\n            max={100}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport { SketchPicker } from 'react-color';\nimport { editColorInArray } from '../../../../../actions';\n\nexport default class extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      displayColorPicker: false,\n      backgroundColor: ''\n    };\n  }\n\n  componentDidMount() {\n    const { color } = this.props;\n    this.setState({ backgroundColor: color });\n  }\n\n  handleClick = () => {\n    const { displayColorPicker, backgroundColor } = this.state;\n    if (displayColorPicker) {\n      const { index, dispatch } = this.props;\n      dispatch(editColorInArray({ index, color: backgroundColor }));\n    }\n    this.setState(prevState => ({\n      displayColorPicker: !prevState.displayColorPicker\n    }));\n  };\n\n  handleClose = () => {};\n\n  handleOnChangeComplete = color => {\n    this.setState({ backgroundColor: color.hex });\n  };\n\n  render() {\n    const { backgroundColor } = this.state;\n    const styles = {\n      color: {\n        width: '36px',\n        height: '14px',\n        borderRadius: '2px',\n        background: backgroundColor\n      },\n      swatch: {\n        padding: '5px',\n        background: '#fff',\n        borderRadius: '1px',\n        boxShadow: '0 0 0 1px rgba(0,0,0,.1)',\n        display: 'inline-block',\n        cursor: 'pointer'\n      },\n      popover: {\n        position: 'absolute',\n        zIndex: '2'\n      },\n      cover: {\n        position: 'fixed',\n        top: '0px',\n        right: '0px',\n        bottom: '0px',\n        left: '0px'\n      }\n    };\n    const { displayColorPicker } = this.state;\n\n    return (\n      <div>\n        <button type=\"submit\" style={styles.swatch} onClick={this.handleClick}>\n          <div style={styles.color} />\n        </button>\n        {displayColorPicker ? (\n          <div style={styles.popover}>\n            <button\n              type=\"submit\"\n              style={styles.cover}\n              onClick={this.handleClose}\n            />\n            <SketchPicker\n              color={backgroundColor}\n              onChangeComplete={this.handleOnChangeComplete}\n            />\n          </div>\n        ) : null}\n      </div>\n    );\n  }\n}\n\n// export default class Component extends React.Component {\n//   render() {\n//     // eslint-disable-next-line react/destructuring-assignment\n//     const color = this.props[this.props.colorName];\n//     const { header } = this.props;\n//     return (\n//       <StyledPhotoshopPickerDivContainer>\n//         <PhotoshopPicker\n//           header={header}\n//           color={color}\n//           onChangeComplete={this.handleOnChangeComplete}\n//         />\n//       </StyledPhotoshopPickerDivContainer>\n//     );\n//   }\n// }\n","/* eslint-disable react/no-array-index-key */\nimport React from 'react';\nimport { random } from 'chroma-js';\nimport { connect } from 'react-redux';\nimport ColorPicker from './ColorPicker';\nimport ColorSlide from './ColorSlide';\nimport CustomColorPicker from './CustomColorPicker';\nimport { removeFromColorArray, addToColorArray } from '../../../../actions';\n// import styles from './styles'\n\nclass ColorPickersContainer extends React.Component {\n  removeHandler = ({ index }) => {\n    const { dispatch } = this.props;\n    dispatch(removeFromColorArray({ index }));\n  };\n\n  handleAdd = () => {\n    const { dispatch } = this.props;\n    dispatch(addToColorArray(random()));\n  };\n\n  render() {\n    const { colorHueMode, saturation, lightness, colorArray } = this.props;\n    return (\n      <div>\n        <h2>Mortar Color</h2>\n        <ColorPicker\n          colorName=\"mortarColor\"\n          header=\"Mortar Color\"\n          {...this.props}\n        />\n        <h2>Colors</h2>\n        {colorHueMode === 'two-point scale' && (\n          <div style={{ display: 'flex' }}>\n            <ColorPicker\n              colorName=\"firstColor\"\n              header=\"First Color\"\n              {...this.props}\n            />\n            <ColorPicker\n              colorName=\"secondColor\"\n              header=\"Second Color\"\n              {...this.props}\n            />\n          </div>\n        )}\n        {colorHueMode === 'totally-random RGB' && (\n          <p>No color values to select. Random rgb values generated.</p>\n        )}\n        {colorHueMode === 'controlled-random HSL' && (\n          <div style={{ display: 'flex' }}>\n            <ColorSlide\n              value={saturation}\n              valueName=\"saturation\"\n              {...this.props}\n            />\n            <ColorSlide\n              value={lightness}\n              valueName=\"lightness\"\n              {...this.props}\n            />\n          </div>\n        )}\n        {colorHueMode === 'choose color from multiple' && (\n          <div style={{ maxWidth: 800 }}>\n            <span>Click on color box to edit, click again to save.</span>\n            <div\n              style={{\n                display: 'grid',\n                gridTemplateColumns: 'repeat(auto-fill, minmax(52px, 1fr))',\n                gridColumnGap: 0,\n                gridRowGap: 15\n              }}\n            >\n              <button\n                style={{ marginRight: 5, borderRadius: 5 }}\n                type=\"submit\"\n                onClick={this.handleAdd}\n              >\n                Add Color\n              </button>\n              {colorArray.map((color, index) => {\n                return (\n                  <div key={index + color}>\n                    <CustomColorPicker\n                      index={index}\n                      key={index + color}\n                      color={color}\n                      {...this.props}\n                    />\n                    <button\n                      type=\"submit\"\n                      onClick={() => this.removeHandler({ index })}\n                    >\n                      delete\n                    </button>\n                  </div>\n                );\n              })}\n            </div>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  firstColor,\n  secondColor,\n  mortarColor,\n  colorMode,\n  colorHueMode\n}) => ({\n  firstColor,\n  secondColor,\n  mortarColor,\n  colorMode,\n  colorHueMode\n});\n\nexport default connect(mapStateToProps)(ColorPickersContainer);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport ColorModeSelector from './ColorModeSelector';\nimport ColorHueModeSelector from './ColorHueModeSelector';\nimport ColorPickersOptions from './ColorPickersOptions';\n\nconst ColorPickersContainer = props => (\n  <div>\n    <h2>Colors</h2>\n    <ColorHueModeSelector {...props} />\n    <ColorModeSelector {...props} />\n    <ColorPickersOptions {...props} />\n  </div>\n);\n\nconst mapStateToProps = ({\n  firstColor,\n  secondColor,\n  saturation,\n  lightness,\n  colorArray,\n  colorMode,\n  colorHueMode\n}) => ({\n  firstColor,\n  secondColor,\n  saturation,\n  lightness,\n  colorArray,\n  colorMode,\n  colorHueMode\n});\n\nexport default connect(mapStateToProps)(ColorPickersContainer);\n","import React from 'react';\nimport BrickDimensions from './BrickDimensions';\nimport CanvasDimensions from './CanvasDimensions';\nimport ColorPickersContainer from './ColorPickersContainer';\n\nexport default () => (\n  <div>\n    <BrickDimensions />\n    <CanvasDimensions />\n    <ColorPickersContainer />\n  </div>\n);\n","export const trimCanvasHeight = (canvasDim, brickDim, mortar) =>\n  canvasDim - (canvasDim % (brickDim + mortar)) - mortar;\n\nexport const trimCanvasWidth = (canvasDim, brickDim, mortar) =>\n  canvasDim - (canvasDim % (brickDim + mortar)) - mortar;\n","/* eslint-disable react/no-unused-state */\nimport React, { Component } from 'react';\nimport brickLayer from '../../../helpers/brickLayer';\nimport {\n  trimCanvasWidth,\n  trimCanvasHeight\n} from '../../../helpers/canvasSizeCorrector';\n\nexport default class extends Component {\n  render() {\n    const {\n      brickHeight,\n      brickWidth,\n      brickMortar,\n      trimHeight,\n      trimWidth,\n      firstColor,\n      saturation,\n      colorArray,\n      lightness,\n      secondColor,\n      colorMode,\n      colorHueMode,\n      mortarColor,\n      save\n    } = this.props;\n    let { canvasHeight, canvasWidth } = this.props;\n    if (trimHeight)\n      canvasHeight = trimCanvasHeight(canvasHeight, brickHeight, brickMortar);\n    if (trimWidth)\n      canvasWidth = trimCanvasWidth(canvasWidth, brickWidth, brickMortar);\n    return (\n      <div>\n        <button type=\"submit\" onClick={save}>\n          Generate Download Link\n        </button>\n        <span id=\"download-div\" />\n        <div id=\"stats\">\n          <p>\n            Actual Canvas Dimensions: {canvasWidth} x {canvasHeight} height\n          </p>\n          <p>\n            Brick Dimensions: {brickWidth} x {brickHeight} height, with a{' '}\n            {brickMortar} mortar\n          </p>\n            <button style={{marginBottom:30}} type=\"submit\" onClick={()=> this.setState({ _: Math.random() })}>Refresh</button>\n        </div>\n        <svg\n          id=\"brickwall\"\n          width={canvasWidth}\n          style={{backgroundColor: mortarColor}}\n          height={canvasHeight}\n          preserveAspectRatio=\"xMinYMax meet\"\n        >\n          {brickLayer({\n            canvasHeight,\n            canvasWidth,\n            brickHeight,\n            brickWidth,\n            brickMortar,\n            firstColor,\n            secondColor,\n            colorArray,\n            saturation,\n            lightness,\n            colorHueMode,\n            colorMode\n          }).map(({ x, y, fill }) => (\n            <rect\n              className=\"brick\"\n              width={brickWidth}\n              height={brickHeight}\n              key={`${x}+${y}`}\n              x={x}\n              y={y}\n              fill={fill}\n            />\n          ))}\n        </svg>\n      </div>\n    );\n  }\n}\n","import chroma from 'chroma-js';\n\nexport default function brickLayer({\n  canvasHeight,\n  canvasWidth,\n  brickHeight,\n  brickWidth,\n  brickMortar,\n  firstColor,\n  secondColor,\n  colorArray,\n  saturation,\n  lightness,\n  colorHueMode,\n  colorMode\n}) {\n  const coordinates = [];\n  const xStart = -brickWidth / 2;\n  const yIncrement = Math.round(brickHeight + brickMortar);\n  const xIncrement = Math.round(brickWidth + brickMortar);\n  const yStartMaximum = canvasHeight - brickHeight;\n  const xStartMaximum = canvasWidth;\n  let scale;\n  switch (colorHueMode) {\n    case 'two-point scale':\n      scale = chroma.scale([firstColor, secondColor]).mode(colorMode);\n      break;\n    case 'totally-random RGB':\n      scale = () => chroma.random();\n      break;\n    case 'controlled-random HSL':\n      scale = random => {\n        const hue = Math.floor(random * 360);\n        return chroma.hsl(hue, saturation, lightness);\n      };\n      break;\n    case 'choose color from multiple':\n      scale = () => {\n        if (colorArray === undefined || colorArray.length === 0) return null\n        return colorArray[Math.floor(Math.random() * colorArray.length)];\n      };\n      break;\n    default:\n      break;\n  }\n\n  let i = 0;\n  for (let y = 0; y <= yStartMaximum; y += yIncrement) {\n    for (let x = xStart; x <= xStartMaximum; x += xIncrement) {\n      const fill = scale(Math.random());\n      if (i % 2 !== 0) {\n        coordinates.push({ x: x + brickWidth / 2, y, fill });\n      } else {\n        coordinates.push({ x, y, fill });\n      }\n    }\n    i += 1;\n  }\n  return coordinates;\n}\n","import React from 'react';\nimport xmlserializer from 'xmlserializer';\nimport { connect } from 'react-redux';\nimport Canvas from './Canvas';\n\nfunction save() {\n  const svg = document.getElementById('brickwall');\n  // eslint-disable-next-line no-undef\n  const serializer = new XMLSerializer() || xmlserializer;\n  const svgBlob = new Blob([serializer.serializeToString(svg)], {\n    type: 'image/svg+xml'\n  });\n  const url = URL.createObjectURL(svgBlob);\n  const link = document.createElement('a');\n  link.href = url;\n  link.download = 'brickwall.svg';\n  link.innerHTML = 'Click to download';\n  link.onclick = () => {\n    document.getElementById('download-div').innerHTML = '';\n  };\n  document.getElementById('download-div').innerHTML = '';\n  document.getElementById('download-div').appendChild(link);\n}\n\nconst ColorPickersContainer = props => (\n  <div>\n    <h2>Canvas</h2>\n    <Canvas {...props} save={save} />\n  </div>\n);\n\nconst mapStateToProps = ({\n  canvasHeight,\n  canvasWidth,\n  brickHeight,\n  brickWidth,\n  brickMortar,\n  trimHeight,\n  trimWidth,\n  firstColor,\n  mortarColor,\n  saturation,\n  colorArray,\n  lightness,\n  secondColor,\n  colorHueMode,\n  colorMode\n}) => ({\n  canvasHeight,\n  canvasWidth,\n  brickHeight,\n  brickWidth,\n  brickMortar,\n  trimHeight,\n  trimWidth,\n  firstColor,\n  secondColor,\n  colorArray,\n  mortarColor,\n  saturation,\n  lightness,\n  colorHueMode,\n  colorMode\n});\n\nexport default connect(mapStateToProps)(ColorPickersContainer);\n","import React from 'react';\nimport Interface from './components/Interface';\nimport CanvasContainer from './components/CanvasContainer';\n\nconst styles = {\n  App: {\n    margin: 15\n  }\n};\n\nfunction App() {\n  return (\n    <div style={styles.App} className=\"App\">\n      <header>\n        <h1>Brick Generator</h1>\n      </header>\n      <Interface />\n      <CanvasContainer />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './store/store';\nimport './styles/index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}