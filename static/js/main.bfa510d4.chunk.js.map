{"version":3,"sources":["constants/brickDimensions.js","constants/defaults.js","actions/index.js","store/store.js","reducer/index.js","components/Common/Select/index.js","components/Interface/BrickDimensions/BrickSelectorAndForm/styles/index.js","components/Interface/BrickDimensions/BrickSelectorAndForm/index.js","components/Interface/BrickDimensions/index.js","components/Interface/CanvasDimensions/CanvasForm/styles/index.js","components/Interface/CanvasDimensions/CanvasForm/index.js","components/Interface/CanvasDimensions/index.js","components/Interface/ColorPickersContainer/ColorModeSelector/index.js","components/Interface/ColorPickersContainer/ColorHueModeSelector/index.js","components/Interface/ColorPickersContainer/ColorPickersOptions/ColorPicker/index.js","components/Interface/ColorPickersContainer/ColorPickersOptions/ColorSlide/index.js","components/Interface/ColorPickersContainer/ColorPickersOptions/CustomColorPicker/index.js","components/Interface/ColorPickersContainer/ColorPickersOptions/index.js","components/Interface/ColorPickersContainer/index.js","components/Interface/index.js","helpers/canvasSizeCorrector.js","components/CanvasContainer/Canvas/index.js","helpers/brickLayer.js","components/CanvasContainer/index.js","App.js","serviceWorker.js","index.js"],"names":["brickDimensions","Standard","height","width","mortar","Secondary","colorModes","rgb","lab","lrgb","hsl","lch","colorHueModes","two-point scale","totally-random RGB","controlled-random HSL","choose color from multiple","initialState","staggerBricks","brickHeight","brickWidth","brickMortar","canvasHeight","canvasWidth","lineThickness","brickDimensionsPopup","canvasDimensionsPopup","firstColor","secondColor","mortarColor","colorArray","saturation","lightness","colorHueMode","colorMode","trimHeight","trimWidth","borderTransparent","TOGGLE_STAGGER_BRICKS","TOGGLE_BRICK_POPUP","TOGGLE_CANVAS_POPUP","SET_BRICK_DIMENSIONS","SET_CANVAS_DIMENSIONS","TOGGLE_TRIM","SET_COLOR","SET_HSL","SAVE_IMAGE","SET_COLOR_MODE","SET_COLOR_HUE_MODE","ADD_TO_COLOR_ARRAY","REMOVE_FROM_COLOR_ARRAY","EDIT_COLOR_IN_ARRAY","TOGGLE_BORDER_TRANSPARENT","toggleBorderTransparent","type","toggleBrickDimensionsPopup","setBrickDimensions","dimensions","payload","setCanvasDimensions","editColorInArray","_ref4","index","color","createStore","state","arguments","length","undefined","action","Object","objectSpread","defineProperty","name","value","concat","toConsumableArray","message","slice","window","__REDUX_DEVTOOLS_EXTENSION__","Select","props","noLeftMargin","handleChange","options","disabled","_props$custom","custom","react_default","a","createElement","style","margin","onChange","keys","map","key","StyledForm","styled","form","_templateObject","_default","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleSelectChange","event","_this$props","dispatch","target","_event$target","setState","prevState","formControls","handleToggleStaggerBricks","submitForm","preventDefault","parseInt","_this$props2","_this$props3","display","flexDirection","alignItems","marginRight","checked","onSubmit","min","step","Component","connect","_ref","BrickSelectorAndForm_default","styles_templateObject","handleToggleTrim","toggleTrim","styles_StyledForm","CanvasForm_default","React","styles","container","marginBottom","handleOnChangeComplete","colorName","setColor","hex","header","lib","onChangeComplete","Handle","Slider","handle","dragging","restProps","objectWithoutProperties","rc_tooltip_es","prefixCls","overlay","visible","placement","assign","valueName","_ref2","setHSL","rc_slider_es","onAfterChange","defaultValue","max","handleClick","_this$state","displayColorPicker","backgroundColor","colorTransparent","handleClose","handleToggleColorTransparent","borderRadius","background","swatch","padding","cursor","popover","boxShadow","position","zIndex","cover","top","right","bottom","left","_this$state2","onClick","ColorPickersContainer","removeHandler","_ref3","removeFromColorArray","handleAdd","random","handleToggleBorderTransparent","_this2","ColorPicker_Component","ColorSlide_default","maxWidth","gridTemplateColumns","gridColumnGap","gridRowGap","CustomColorPicker_default","ColorHueModeSelector_Component","ColorModeSelector_Component","ColorPickersOptions","Interface","Interface_BrickDimensions","Interface_CanvasDimensions","Interface_ColorPickersContainer","canvasDim","save","brickDim","trimCanvasWidth","bricks","scale","coordinates","xStart","yIncrement","Math","round","xIncrement","yStartMaximum","xStartMaximum","chroma","mode","hue","floor","i","y","x","fill","push","brickLayer","id","_","preserveAspectRatio","className","svg","document","getElementById","serializer","XMLSerializer","xmlserializer","svgBlob","Blob","serializeToString","url","URL","createObjectURL","link","href","download","innerHTML","body","onclick","appendChild","Canvas_default","App","CanvasContainer","Boolean","location","hostname","match","ReactDOM","render","es","store","src_App","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.bfa510d4.chunk.js","sourcesContent":["export default {\n  // actual dimensions in millimeters\n  Standard: {\n    height: 65,\n    width: 215,\n    mortar: 10\n  },\n  Secondary: {\n    height: 61,\n    width: 210,\n    mortar: 9\n  }\n};\n","import brickDimensions from './brickDimensions';\n\nexport const colorModes = {\n  rgb: '',\n  lab: '',\n  lrgb: '',\n  hsl: '',\n  lch: ''\n};\n\nexport const colorHueModes = {\n  'two-point scale': '',\n  'totally-random RGB': '',\n  'controlled-random HSL': '',\n  'choose color from multiple': ''\n};\n\nexport const initialState = {\n  staggerBricks: true,\n  brickHeight: brickDimensions.Standard.height,\n  brickWidth: brickDimensions.Standard.width,\n  brickMortar: brickDimensions.Standard.mortar,\n  canvasHeight: 800,\n  canvasWidth: 1000,\n  lineThickness: 1,\n  brickDimensionsPopup: false,\n  canvasDimensionsPopup: false,\n  firstColor: '#000000',\n  secondColor: '#FFFFFF',\n  mortarColor: '#FFFFFF',\n  colorArray: [],\n  saturation: 0.8,\n  lightness: 0.75,\n  colorHueMode: 'two-point scale',\n  colorMode: 'rgb',\n  trimHeight: true,\n  trimWidth: true,\n  borderTransparent: true,\n};\n","export const TOGGLE_STAGGER_BRICKS = 'TOGGLE_STAGGER_BRICKS';\nexport const TOGGLE_BRICK_POPUP = 'TOGGLE_BRICK_POPUP';\nexport const TOGGLE_CANVAS_POPUP = 'TOGGLE_CANVAS_POPUP';\nexport const SET_BRICK_DIMENSIONS = 'SET_BRICK_DIMENSIONS';\nexport const SET_CANVAS_DIMENSIONS = 'SET_CANVAS_DIMENSIONS';\nexport const TOGGLE_TRIM = 'TOGGLE_TRIM';\nexport const SET_COLOR = 'SET_COLOR';\nexport const SET_HSL = 'SET_HSL';\nexport const SAVE_IMAGE = 'SAVE_IMAGE';\nexport const SET_COLOR_MODE = 'SET_COLOR_MODE';\nexport const SET_COLOR_HUE_MODE = 'SET_COLOR_HUE_MODE';\nexport const ADD_TO_COLOR_ARRAY = 'ADD_TO_COLOR_ARRAY';\nexport const REMOVE_FROM_COLOR_ARRAY = 'REMOVE_FROM_COLOR_ARRAY';\nexport const EDIT_COLOR_IN_ARRAY = 'EDIT_COLOR_IN_ARRAY';\nexport const TOGGLE_BORDER_TRANSPARENT = 'TOGGLE_BORDER_TRANSPARENT';\n\nexport const toggleBorderTransparent = () => ({\n  type: TOGGLE_BORDER_TRANSPARENT\n})\n\nexport function toggleStaggerBricks() {\n  return {\n    type: TOGGLE_STAGGER_BRICKS\n  };\n}\n\nexport function toggleBrickDimensionsPopup() {\n  return {\n    type: TOGGLE_BRICK_POPUP\n  };\n}\n\nexport function toggleCanvasDimensionsPopup() {\n  return {\n    type: TOGGLE_CANVAS_POPUP\n  };\n}\n\nexport function setBrickDimensions(dimensions) {\n  return {\n    type: SET_BRICK_DIMENSIONS,\n    payload: dimensions\n  };\n}\n\nexport function setCanvasDimensions(dimensions) {\n  return {\n    type: SET_CANVAS_DIMENSIONS,\n    payload: dimensions\n  };\n}\n\nexport function toggleTrim(name) {\n  return {\n    type: TOGGLE_TRIM,\n    payload: name\n  };\n}\n\nexport function setColor({ name, color }) {\n  return {\n    type: SET_COLOR,\n    payload: { name, color }\n  };\n}\n\nexport function setHSL({ name, value }) {\n  return {\n    type: SET_HSL,\n    payload: { name, value }\n  };\n}\n\nexport function setColorMode(mode) {\n  return {\n    type: SET_COLOR_MODE,\n    payload: mode\n  };\n}\n\nexport function setColorHueMode(mode) {\n  return {\n    type: SET_COLOR_HUE_MODE,\n    payload: mode\n  };\n}\n\nexport function saveImage() {\n  return { type: SAVE_IMAGE };\n}\n\nexport function addToColorArray(color) {\n  return {\n    type: ADD_TO_COLOR_ARRAY,\n    payload: color\n  };\n}\n\nexport function removeFromColorArray({ index }) {\n  return {\n    type: REMOVE_FROM_COLOR_ARRAY,\n    payload: { index }\n  };\n}\n\nexport function editColorInArray({ index, color }) {\n  return {\n    type: EDIT_COLOR_IN_ARRAY,\n    payload: { index, color }\n  };\n}\n","import { createStore } from 'redux';\nimport reducer from '../reducer';\n\nexport default createStore(\n  reducer /* preloadedState, */,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n","import { initialState } from '../constants/defaults';\nimport {\n  TOGGLE_STAGGER_BRICKS,\n  TOGGLE_BRICK_POPUP,\n  TOGGLE_CANVAS_POPUP,\n  SET_BRICK_DIMENSIONS,\n  SET_CANVAS_DIMENSIONS,\n  TOGGLE_TRIM,\n  SET_COLOR,\n  SET_COLOR_MODE,\n  SAVE_IMAGE,\n  SET_COLOR_HUE_MODE,\n  SET_HSL,\n  ADD_TO_COLOR_ARRAY,\n  REMOVE_FROM_COLOR_ARRAY,\n  EDIT_COLOR_IN_ARRAY,\n  TOGGLE_BORDER_TRANSPARENT\n} from '../actions';\n\nexport default function reducer(state = initialState, action) {\n  switch (action.type) {\n    case TOGGLE_BORDER_TRANSPARENT:\n      return { ...state, borderTransparent: !state.borderTransparent };\n    case TOGGLE_STAGGER_BRICKS:\n      return { ...state, staggerBricks: !state.staggerBricks };\n    case TOGGLE_BRICK_POPUP:\n      return { ...state, brickDimensionsPopup: !state.brickDimensionsPopup };\n    case TOGGLE_CANVAS_POPUP:\n      return { ...state, canvasDimensionsPopup: !state.canvasDimensionsPopup };\n    case SET_BRICK_DIMENSIONS:\n      return {\n        ...state,\n        brickHeight: action.payload.height || state.brickHeight,\n        brickWidth: action.payload.width || state.brickWidth,\n        brickMortar: action.payload.mortar\n      };\n    case SET_CANVAS_DIMENSIONS:\n      return {\n        ...state,\n        canvasHeight: action.payload.height || state.canvasHeight,\n        canvasWidth: action.payload.width || state.canvasWidth\n      };\n    case TOGGLE_TRIM:\n      return { ...state, [action.payload]: !state[action.payload] };\n    case SET_COLOR:\n      return { ...state, [action.payload.name]: action.payload.color };\n    case SET_HSL:\n      return { ...state, [action.payload.name]: action.payload.value };\n    case SET_COLOR_MODE:\n      return { ...state, colorMode: action.payload };\n    case SET_COLOR_HUE_MODE:\n      return { ...state, colorHueMode: action.payload };\n    case SAVE_IMAGE:\n      return state;\n    case ADD_TO_COLOR_ARRAY:\n      return { ...state, colorArray: [...state.colorArray, action.payload] };\n    case REMOVE_FROM_COLOR_ARRAY:\n      return {\n        ...state,\n        message: action.payload,\n        colorArray: [\n          ...state.colorArray.slice(0, action.payload.index),\n          ...state.colorArray.slice(action.payload.index + 1)\n        ]\n      };\n    case EDIT_COLOR_IN_ARRAY:\n      return {\n        ...state,\n        colorArray: [\n          ...state.colorArray.slice(0, action.payload.index),\n          action.payload.color,\n          ...state.colorArray.slice(action.payload.index + 1)\n        ]\n      };\n    default:\n      return state;\n  }\n}\n","import React from 'react';\n\nexport default props => {\n  const {\n    noLeftMargin,\n    handleChange,\n    value,\n    options,\n    disabled,\n    custom = false\n  } = props;\n  return (\n    <select\n      style={noLeftMargin ? { margin: '10px 10px 10px 0' } : { margin: 10 }}\n      disabled={disabled}\n      value={value}\n      onChange={handleChange}\n    >\n      {Object.keys(options).map(name => (\n        <option key={name} value={name}>\n          {name}\n        </option>\n      ))}\n      {custom && (\n        <option key=\"custom\" value=\"Custom...\">\n          Custom...\n        </option>\n      )}\n    </select>\n  );\n};\n","import styled from 'styled-components';\n\n// eslint-disable-next-line import/prefer-default-export\nexport const StyledForm = styled.form`\n    display: flex;\n    flex-direction: column;\n    width: 200px;\n    justify-content: space-between;\n\n    div {\n        display: flex;\n        margin-bottom: 20px;\n        align-items: center;\n        input {\n            width: 50px;\n            margin-right: 20px;\n        }\n        span {\n            width: 120px;\n        }\n    }\n`;","import React, { Component } from 'react';\nimport Select from '../../../Common/Select';\nimport brickDimensions from '../../../../constants/brickDimensions';\nimport {\n  toggleBrickDimensionsPopup,\n  setBrickDimensions,\n  toggleStaggerBricks\n} from '../../../../actions/index';\nimport { StyledForm } from './styles';\n\nexport default class extends Component {\n  constructor(props) {\n    super(props);\n    const { brickHeight, brickWidth, brickMortar } = this.props;\n    this.state = {\n      formControls: {\n        brickHeight: { value: brickHeight },\n        brickWidth: { value: brickWidth },\n        brickMortar: { value: brickMortar }\n      }\n    };\n  }\n\n  handleSelectChange = event => {\n    const { brickDimensionsPopup, dispatch } = this.props;\n    const { value } = event.target;\n    if (value === 'Custom...') {\n      dispatch(toggleBrickDimensionsPopup());\n    } else {\n      if (brickDimensionsPopup === true) dispatch(toggleBrickDimensionsPopup());\n      dispatch(setBrickDimensions(brickDimensions[value]));\n    }\n  };\n\n  handleChange = event => {\n    const { name, value } = event.target;\n    this.setState(prevState => {\n      return {\n        formControls: {\n          ...prevState.formControls,\n          [name]: {\n            ...prevState.formControls[name],\n            value\n          }\n        }\n      };\n    });\n  };\n\n  handleToggleStaggerBricks = () => {\n    const { dispatch } = this.props;\n    dispatch(toggleStaggerBricks());\n  };\n\n  submitForm = event => {\n    event.preventDefault();\n    const { dispatch } = this.props;\n    const { formControls } = this.state;\n    const height = parseInt(formControls.brickHeight.value, 10);\n    const width = parseInt(formControls.brickWidth.value, 10);\n    const mortar = parseInt(formControls.brickMortar.value, 10);\n    dispatch(setBrickDimensions({ height, width, mortar }));\n  };\n\n  render() {\n    const { value, brickDimensionsPopup, staggerBricks } = this.props;\n    const { formControls } = this.state;\n    return (\n      <div>\n        <h2>Brick Dimensions</h2>\n        <div\n          style={{\n            display: 'flex',\n            flexDirection: 'row',\n            alignItems: 'center'\n          }}\n        >\n          <Select\n            noLeftMargin\n            handleChange={this.handleSelectChange}\n            value={value}\n            options={brickDimensions}\n            custom\n          />\n          <span style={{ marginRight: 10 }}>Stagger Bricks</span>\n          <input\n            type=\"checkbox\"\n            name=\"staggerBricks\"\n            checked={staggerBricks}\n            onChange={this.handleToggleStaggerBricks}\n          />\n        </div>\n        {brickDimensionsPopup && (\n          <StyledForm onSubmit={this.submitForm}>\n            <div>\n              <span>Brick Height</span>\n              <input\n                type=\"number\"\n                min=\"0\"\n                step=\"1\"\n                name=\"brickHeight\"\n                value={formControls.brickHeight.value}\n                onChange={this.handleChange}\n              />\n            </div>\n            <div>\n              <span>Brick Width</span>\n              <input\n                type=\"number\"\n                min=\"0\"\n                step=\"1\"\n                name=\"brickWidth\"\n                value={formControls.brickWidth.value}\n                onChange={this.handleChange}\n              />\n            </div>\n            <div>\n              <span>Brick Mortar</span>\n              <input\n                type=\"number\"\n                min=\"0\"\n                step=\"1\"\n                name=\"brickMortar\"\n                value={formControls.brickMortar.value}\n                onChange={this.handleChange}\n              />\n            </div>\n            <input type=\"submit\" value=\"Submit\" />\n          </StyledForm>\n        )}\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport BrickSelectorAndForm from './BrickSelectorAndForm';\n\nconst BrickDimensions = props => <BrickSelectorAndForm {...props} />;\n\nconst mapStateToProps = ({\n  staggerBricks,\n  brickHeight,\n  brickWidth,\n  brickMortar,\n  brickDimensionsPopup\n}) => ({\n  staggerBricks,\n  brickHeight,\n  brickWidth,\n  brickMortar,\n  brickDimensionsPopup\n});\n\nexport default connect(mapStateToProps)(BrickDimensions);\n","import styled from 'styled-components';\n\n// eslint-disable-next-line import/prefer-default-export\nexport const StyledForm = styled.form`\n    display: flex;\n    flex-direction: column;\n    width: 380px;\n    justify-content: space-between;\n\n    div {\n        display: flex;\n        margin-bottom: 20px;\n        align-items: center;\n        input {\n            width: 50px;\n            margin-right: 20px;\n        }\n        span {\n            width: 120px;\n        }\n    }\n`;","import React, { Component } from 'react';\nimport { setCanvasDimensions, toggleTrim } from '../../../../actions/index';\nimport { StyledForm } from './styles';\n\nexport default class extends Component {\n  constructor(props) {\n    super(props);\n    const { canvasHeight, canvasWidth } = this.props;\n    this.state = {\n      formControls: {\n        canvasHeight: { value: canvasHeight },\n        canvasWidth: { value: canvasWidth }\n      }\n    };\n  }\n\n  handleSelectChange = event => {\n    const { dispatch } = this.props;\n    const { value } = event.target;\n    dispatch(setCanvasDimensions(value));\n  };\n\n  handleChange = event => {\n    const { name, value } = event.target;\n    this.setState(prevState => {\n      return {\n        formControls: {\n          ...prevState.formControls,\n          [name]: {\n            ...prevState.formControls[name],\n            value\n          }\n        }\n      };\n    });\n  };\n\n  handleToggleTrim = event => {\n    const { dispatch } = this.props;\n    const { name } = event.target;\n    dispatch(toggleTrim(name));\n  };\n\n  submitForm = event => {\n    event.preventDefault();\n    const { dispatch } = this.props;\n    const { formControls } = this.state;\n    const height = parseInt(formControls.canvasHeight.value, 10);\n    const width = parseInt(formControls.canvasWidth.value, 10);\n    dispatch(setCanvasDimensions({ height, width }));\n  };\n\n  render() {\n    const { trimHeight, trimWidth } = this.props;\n    const { formControls } = this.state;\n    return (\n      <div>\n        <h2>Canvas Dimensions</h2>\n        <StyledForm onSubmit={this.submitForm}>\n          <div>\n            <span>Canvas Height</span>\n            <input\n              type=\"number\"\n              min=\"0\"\n              step=\"1\"\n              name=\"canvasHeight\"\n              value={formControls.canvasHeight.value}\n              onChange={this.handleChange}\n            />\n            <span>Trim Height</span>\n            <input\n              type=\"checkbox\"\n              name=\"trimHeight\"\n              checked={trimHeight}\n              onChange={this.handleToggleTrim}\n            />\n          </div>\n          <div>\n            <span>Canvas Width</span>\n            <input\n              type=\"number\"\n              min=\"0\"\n              step=\"1\"  \n              name=\"canvasWidth\"\n              value={formControls.canvasWidth.value}\n              onChange={this.handleChange}\n            />\n            <span>Trim Width</span>\n            <input\n              type=\"checkbox\"\n              name=\"trimWidth\"\n              checked={trimWidth}\n              onChange={this.handleToggleTrim}\n            />\n          </div>\n          <input type=\"submit\" value=\"Submit\" />\n        </StyledForm>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport CanvasForm from './CanvasForm';\n\nconst CanvasDimensions = props => <CanvasForm {...props} />;\n\nconst mapStateToProps = ({\n  canvasHeight,\n  canvasWidth,\n  trimHeight,\n  trimWidth\n}) => ({\n  canvasHeight,\n  canvasWidth,\n  trimHeight,\n  trimWidth\n});\n\nexport default connect(mapStateToProps)(CanvasDimensions);\n","import React from 'react';\nimport { colorModes } from '../../../../constants/defaults';\nimport { setColorMode } from '../../../../actions';\nimport Select from '../../../Common/Select';\n\nexport default class Component extends React.Component {\n  handleSelectChange = event => {\n    const { dispatch } = this.props;\n    const { value } = event.target;\n    dispatch(setColorMode(value));\n  };\n\n  render() {\n    const { colorMode, colorHueMode } = this.props;\n    return (\n      <div>\n        Color Scale Method\n        <Select\n          disabled={colorHueMode !== 'two-point scale'}\n          handleChange={this.handleSelectChange}\n          value={colorMode}\n          options={colorModes}\n        />\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport { colorHueModes } from '../../../../constants/defaults';\nimport { setColorHueMode } from '../../../../actions';\nimport Select from '../../../Common/Select';\n\nconst styles = {\n  container: {\n    marginBottom: 20\n  }\n}\n\nexport default class Component extends React.Component {\n  handleSelectChange = event => {\n    const { dispatch } = this.props;\n    const { value } = event.target;\n    dispatch(setColorHueMode(value));\n  };\n\n  render() {\n    const { colorHueMode } = this.props;\n    return (\n      <div style={styles.container}>\n          Color Mode\n        <Select\n          handleChange={this.handleSelectChange}\n          value={colorHueMode}\n          options={colorHueModes}\n        />\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport { PhotoshopPicker } from 'react-color';\nimport { setColor } from '../../../../../actions';\n\nconst styles = {\n  container: { marginRight: 20 }\n};\n\nexport default class Component extends React.Component {\n  handleOnChangeComplete = color => {\n    const { colorName, dispatch } = this.props;\n    dispatch(setColor({ name: colorName, color: color.hex }));\n  };\n\n  render() {\n    // eslint-disable-next-line react/destructuring-assignment\n    const color = this.props[this.props.colorName];\n    const { header } = this.props;\n    return (\n      <div style={styles.container}>\n        <PhotoshopPicker\n          header={header}\n          color={color}\n          onChangeComplete={this.handleOnChangeComplete}\n        />\n      </div>\n    );\n  }\n}\n","import 'rc-slider/assets/index.css';\nimport 'rc-tooltip/assets/bootstrap.css';\n\nimport React from 'react';\nimport Slider from 'rc-slider';\nimport Tooltip from 'rc-tooltip';\nimport { setHSL } from '../../../../../actions';\n\nconst { Handle } = Slider;\n\nconst handle = props => {\n  const { value, dragging, index, ...restProps } = props;\n  return (\n    <Tooltip\n      prefixCls=\"rc-slider-tooltip\"\n      overlay={value}\n      visible={dragging}\n      placement=\"top\"\n      key={index}\n    >\n      <Handle value={value} {...restProps} />\n    </Tooltip>\n  );\n};\n\nexport default class extends React.Component {\n  handleOnChangeComplete = value => {\n    const { valueName, dispatch } = this.props;\n    dispatch(setHSL({ name: valueName, value: value / 100 }));\n  };\n\n  render() {\n    // const color = this.props[this.props.colorName];\n    const wrapperStyle = { width: 400, margin: 50 };\n    const { valueName, value } = this.props;\n    return (\n      <div>\n        <h3>{valueName}</h3>\n        <div style={wrapperStyle}>\n          <Slider\n            handle={handle}\n            onAfterChange={this.handleOnChangeComplete}\n            defaultValue={value * 100}\n            min={0}\n            max={100}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport { SketchPicker } from 'react-color';\nimport { editColorInArray } from '../../../../../actions';\n\nexport default class extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      displayColorPicker: false,\n      backgroundColor: '',\n      colorTransparent: false\n    };\n  }\n\n  componentDidMount() {\n    const { color } = this.props;\n    this.setState({ backgroundColor: color });\n  }\n\n  handleClick = () => {\n    const {\n      displayColorPicker,\n      backgroundColor,\n      colorTransparent\n    } = this.state;\n    const { index, dispatch } = this.props;\n    if (colorTransparent) {\n      dispatch(editColorInArray({ index, color: false }))\n    } else if (displayColorPicker) {\n      dispatch(editColorInArray({ index, color: backgroundColor }));\n    }\n    this.setState(prevState => ({\n      displayColorPicker: !prevState.displayColorPicker\n    }));\n  };\n\n  handleClose = () => {};\n\n  handleOnChangeComplete = color => {\n    this.setState({ backgroundColor: color.hex });\n  };\n\n  handleToggleColorTransparent = ({ target: { checked } }) => {\n    this.setState({ colorTransparent: checked });\n  };\n\n  render() {\n    const { backgroundColor } = this.state;\n    const styles = {\n      color: {\n        width: '36px',\n        height: '14px',\n        borderRadius: '2px',\n        background: backgroundColor\n      },\n      swatch: {\n        padding: '5px',\n        background: '#fff',\n        borderRadius: '1px',\n        display: 'inline-block',\n        cursor: 'pointer'\n      },\n      popover: {\n        boxShadow: '0 0 0 1px rgba(0,0,0,.1)',\n        borderRadius: '1px',\n        position: 'absolute',\n        zIndex: '2',\n        backgroundColor: 'white'\n      },\n      cover: {\n        display: 'none',\n        top: '0px',\n        right: '0px',\n        bottom: '0px',\n        left: '0px'\n      }\n    };\n    const { displayColorPicker, colorTransparent } = this.state;\n\n    return (\n      <div>\n        <button type=\"submit\" style={styles.swatch} onClick={this.handleClick}>\n          <div style={styles.color} />\n        </button>\n        {displayColorPicker ? (\n          <div style={styles.popover}>\n            <button\n              type=\"submit\"\n              style={styles.cover}\n              onClick={this.handleClose}\n            >\n              Save\n            </button>\n            <div style={{ margin: 10 }}>\n              <span style={{ margin: '0px 10px 0px 0px' }}>Transparent: </span>\n              <input\n                type=\"checkbox\"\n                name=\"borderTransparent\"\n                checked={colorTransparent}\n                onChange={this.handleToggleColorTransparent}\n              />\n            </div>\n            {!colorTransparent && (\n              <SketchPicker\n                color={backgroundColor}\n                onChangeComplete={this.handleOnChangeComplete}\n              />\n            )}\n          </div>\n        ) : null}\n      </div>\n    );\n  }\n}\n","/* eslint-disable react/no-array-index-key */\nimport React from 'react';\nimport { random } from 'chroma-js';\nimport { connect } from 'react-redux';\nimport ColorPicker from './ColorPicker';\nimport ColorSlide from './ColorSlide';\nimport CustomColorPicker from './CustomColorPicker';\nimport {\n  removeFromColorArray,\n  addToColorArray,\n  toggleBorderTransparent\n} from '../../../../actions';\n// import styles from './styles'\n\nclass ColorPickersContainer extends React.Component {\n  removeHandler = ({ index }) => {\n    const { dispatch } = this.props;\n    dispatch(removeFromColorArray({ index }));\n  };\n\n  handleAdd = () => {\n    const { dispatch } = this.props;\n    dispatch(addToColorArray(random()));\n  };\n\n  handleToggleBorderTransparent = () => {\n    const { dispatch } = this.props;\n    dispatch(toggleBorderTransparent());\n  };\n\n  render() {\n    const {\n      colorHueMode,\n      saturation,\n      lightness,\n      colorArray,\n      borderTransparent\n    } = this.props;\n    return (\n      <div>\n        <h2>Mortar Color</h2>\n        <div style={{ margin: '20px 0px' }}>\n          <span style={{ margin: '0px 10px 0px 0px' }}>Transparent Mortar</span>\n          <input\n            type=\"checkbox\"\n            name=\"borderTransparent\"\n            checked={borderTransparent}\n            onChange={this.handleToggleBorderTransparent}\n          />\n        </div>\n        {!borderTransparent && (\n          <ColorPicker\n            colorName=\"mortarColor\"\n            header=\"Mortar Color\"\n            {...this.props}\n          />\n        )}\n        <h2>Colors</h2>\n        {colorHueMode === 'two-point scale' && (\n          <div style={{ display: 'flex' }}>\n            <ColorPicker\n              colorName=\"firstColor\"\n              header=\"First Color\"\n              {...this.props}\n            />\n            <ColorPicker\n              colorName=\"secondColor\"\n              header=\"Second Color\"\n              {...this.props}\n            />\n          </div>\n        )}\n        {colorHueMode === 'totally-random RGB' && (\n          <p>No color values to select. Random rgb values generated.</p>\n        )}\n        {colorHueMode === 'controlled-random HSL' && (\n          <div style={{ display: 'flex' }}>\n            <ColorSlide\n              value={saturation}\n              valueName=\"saturation\"\n              {...this.props}\n            />\n            <ColorSlide\n              value={lightness}\n              valueName=\"lightness\"\n              {...this.props}\n            />\n          </div>\n        )}\n        {colorHueMode === 'choose color from multiple' && (\n          <div style={{ maxWidth: 800 }}>\n            <span>Click on color box to edit, click again to save.</span>\n            <div\n              style={{\n                display: 'grid',\n                gridTemplateColumns: 'repeat(auto-fill, minmax(52px, 1fr))',\n                gridColumnGap: 0,\n                gridRowGap: 15\n              }}\n            >\n              <button\n                style={{ marginRight: 5, borderRadius: 5 }}\n                type=\"submit\"\n                onClick={this.handleAdd}\n              >\n                Add Color\n              </button>\n              {colorArray.map((color, index) => {\n                return (\n                  <div key={index + color}>\n                    <CustomColorPicker\n                      index={index}\n                      key={index + color}\n                      color={color}\n                      {...this.props}\n                    />\n                    <button\n                      type=\"submit\"\n                      onClick={() => this.removeHandler({ index })}\n                    >\n                      delete\n                    </button>\n                  </div>\n                );\n              })}\n            </div>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  firstColor,\n  secondColor,\n  mortarColor,\n  colorMode,\n  colorHueMode\n}) => ({\n  firstColor,\n  secondColor,\n  mortarColor,\n  colorMode,\n  colorHueMode\n});\n\nexport default connect(mapStateToProps)(ColorPickersContainer);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport ColorModeSelector from './ColorModeSelector';\nimport ColorHueModeSelector from './ColorHueModeSelector';\nimport ColorPickersOptions from './ColorPickersOptions';\n\nconst ColorPickersContainer = props => (\n  <div>\n    <h2>Colors</h2>\n    <ColorHueModeSelector {...props} />\n    <ColorModeSelector {...props} />\n    <ColorPickersOptions {...props} />\n  </div>\n);\n\nconst mapStateToProps = ({\n  firstColor,\n  secondColor,\n  saturation,\n  lightness,\n  colorArray,\n  colorMode,\n  colorHueMode,\n  borderTransparent\n}) => ({\n  firstColor,\n  secondColor,\n  saturation,\n  lightness,\n  colorArray,\n  colorMode,\n  colorHueMode,\n  borderTransparent\n});\n\nexport default connect(mapStateToProps)(ColorPickersContainer);\n","import React from 'react';\nimport BrickDimensions from './BrickDimensions';\nimport CanvasDimensions from './CanvasDimensions';\nimport ColorPickersContainer from './ColorPickersContainer';\n\nexport default () => (\n  <div>\n    <BrickDimensions />\n    <CanvasDimensions />\n    <ColorPickersContainer />\n  </div>\n);\n","export const trimCanvasHeight = (canvasDim, brickDim, mortar) =>\n  canvasDim - (canvasDim % (brickDim + mortar)) - mortar;\n\nexport const trimCanvasWidth = (canvasDim, brickDim, mortar) =>\n  canvasDim - (canvasDim % (brickDim + mortar)) - mortar;\n","/* eslint-disable react/no-unused-state */\nimport React, { Component } from 'react';\nimport brickLayer from '../../../helpers/brickLayer';\nimport {\n  trimCanvasWidth,\n  trimCanvasHeight\n} from '../../../helpers/canvasSizeCorrector';\n\nexport default class extends Component {\n  render() {\n    const {\n      brickHeight,\n      brickWidth,\n      brickMortar,\n      trimHeight,\n      trimWidth,\n      firstColor,\n      saturation,\n      colorArray,\n      lightness,\n      secondColor,\n      colorMode,\n      colorHueMode,\n      mortarColor,\n      staggerBricks,\n      save,\n      borderTransparent,\n    } = this.props;\n    let { canvasHeight, canvasWidth } = this.props;\n    if (trimHeight)\n      canvasHeight = trimCanvasHeight(canvasHeight, brickHeight, brickMortar);\n    if (trimWidth)\n      canvasWidth = trimCanvasWidth(canvasWidth, brickWidth, brickMortar);\n    const bricks = brickLayer({\n      staggerBricks,\n      canvasHeight,\n      canvasWidth,\n      brickHeight,\n      brickWidth,\n      brickMortar,\n      firstColor,\n      secondColor,\n      colorArray,\n      saturation,\n      lightness,\n      colorHueMode,\n      colorMode,\n    });\n    return (\n      <div>\n        <button type=\"submit\" onClick={save}>\n          Generate Download Link\n        </button>\n        <span id=\"download-div\" />\n        <div id=\"stats\">\n          <p>\n            Actual Canvas Dimensions: {canvasWidth} x {canvasHeight} height\n          </p>\n          <p>\n            Brick Dimensions: {brickWidth} x {brickHeight} height, with a{' '}\n            {brickMortar} mortar\n          </p>\n          <button\n            style={{ marginBottom: 30 }}\n            type=\"submit\"\n            onClick={() => this.setState({ _: Math.random() })}\n          >\n            Refresh\n          </button>\n        </div>\n        <svg\n          id=\"brickwall\"\n          width={canvasWidth}\n          style={borderTransparent ? {} : { backgroundColor: mortarColor }}\n          height={canvasHeight}\n          preserveAspectRatio=\"xMinYMax meet\"\n        >\n          {bricks &&\n            bricks.map(({ x, y, fill }) => (\n              <rect\n                className=\"brick\"\n                width={brickWidth}\n                height={brickHeight}\n                key={`${x}+${y}`}\n                x={x}\n                y={y}\n                fill={fill}\n              />\n            ))}\n        </svg>\n      </div>\n    );\n  }\n}\n","import chroma from 'chroma-js';\n\nexport default function brickLayer({\n  staggerBricks,\n  canvasHeight,\n  canvasWidth,\n  brickHeight,\n  brickWidth,\n  brickMortar,\n  firstColor,\n  secondColor,\n  colorArray,\n  saturation,\n  lightness,\n  colorHueMode,\n  colorMode\n}) {\n  if (brickWidth > canvasWidth || brickHeight > canvasHeight) return false;\n  const coordinates = [];\n  const xStart = -brickWidth / 2;\n  const yIncrement = Math.round(brickHeight + brickMortar);\n  const xIncrement = Math.round(brickWidth + brickMortar);\n  const yStartMaximum = canvasHeight - brickHeight;\n  const xStartMaximum = canvasWidth;\n  let scale;\n  switch (colorHueMode) {\n    case 'two-point scale':\n      scale = chroma.scale([firstColor, secondColor]).mode(colorMode);\n      break;\n    case 'totally-random RGB':\n      scale = () => chroma.random();\n      break;\n    case 'controlled-random HSL':\n      scale = random => {\n        const hue = Math.floor(random * 360);\n        return chroma.hsl(hue, saturation, lightness);\n      };\n      break;\n    case 'choose color from multiple':\n      scale = () => {\n        if (colorArray === undefined || colorArray.length === 0) return null;\n        return colorArray[Math.floor(Math.random() * colorArray.length)];\n      };\n      break;\n    default:\n      break;\n  }\n\n  let i = 0;\n  for (let y = 0; y <= yStartMaximum; y += yIncrement) {\n    for (let x = xStart; x <= xStartMaximum; x += xIncrement) {\n      const fill = scale(Math.random());\n      if (fill) {\n        if (staggerBricks && i % 2 !== 0) {\n          coordinates.push({ x, y, fill });\n        } else {\n          coordinates.push({ x: x + brickWidth / 2, y, fill });\n        }\n      }\n    }\n    i += 1;\n  }\n  return coordinates;\n}\n","import React from 'react';\nimport xmlserializer from 'xmlserializer';\nimport { connect } from 'react-redux';\nimport Canvas from './Canvas';\n\nfunction save() {\n  const svg = document.getElementById('brickwall');\n  // eslint-disable-next-line no-undef\n  const serializer = new XMLSerializer() || xmlserializer;\n  const svgBlob = new Blob([serializer.serializeToString(svg)], {\n    type: 'image/svg+xml'\n  });\n  const url = URL.createObjectURL(svgBlob);\n  const link = document.createElement('a');\n  link.href = url;\n  link.download = 'brickwall.svg';\n  link.innerHTML = 'Click to download';\n  document.body.onclick = () => {\n    document.getElementById('download-div').innerHTML = '';\n  };\n  document.getElementById('download-div').innerHTML = '';\n  document.getElementById('download-div').appendChild(link);\n}\n\nconst ColorPickersContainer = props => (\n  <div>\n    <h2>Canvas</h2>\n    <Canvas {...props} save={save} />\n  </div>\n);\n\nconst mapStateToProps = ({\n  staggerBricks,\n  canvasHeight,\n  canvasWidth,\n  brickHeight,\n  brickWidth,\n  brickMortar,\n  trimHeight,\n  trimWidth,\n  firstColor,\n  mortarColor,\n  saturation,\n  colorArray,\n  lightness,\n  secondColor,\n  colorHueMode,\n  colorMode,\n  borderTransparent\n}) => ({\n  staggerBricks,\n  canvasHeight,\n  canvasWidth,\n  brickHeight,\n  brickWidth,\n  brickMortar,\n  trimHeight,\n  trimWidth,\n  firstColor,\n  secondColor,\n  colorArray,\n  mortarColor,\n  saturation,\n  lightness,\n  colorHueMode,\n  colorMode,\n  borderTransparent\n});\n\nexport default connect(mapStateToProps)(ColorPickersContainer);\n","import React from 'react';\nimport Interface from './components/Interface';\nimport CanvasContainer from './components/CanvasContainer';\n\nconst styles = {\n  App: {\n    margin: 15\n  }\n};\n\nfunction App() {\n  return (\n    <div style={styles.App} className=\"App\">\n      <header>\n        <h1>Brick Generator</h1>\n      </header>\n      <Interface />\n      <CanvasContainer />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './store/store';\nimport './styles/index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}